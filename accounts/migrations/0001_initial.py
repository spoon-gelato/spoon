# Generated by Django 2.2.12 on 2020-07-10 15:47

import accounts.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=30, verbose_name='お名前')),
                ('furigana', models.CharField(max_length=30, verbose_name='フリガナ')),
                ('email', models.EmailField(max_length=256, unique=True, verbose_name='メールアドレス')),
                ('tel', models.CharField(max_length=13, verbose_name='電話番号')),
                ('gender', models.CharField(blank=True, choices=[('1', '女性'), ('2', '男性')], max_length=2, verbose_name='性別')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='誕生日')),
                ('is_staff', models.BooleanField(default=False, help_text='ユーザーがこの管理サイトにログインできるかどうかを指定します。', verbose_name='管理サイト使用権限')),
                ('is_active', models.BooleanField(default=True, help_text='このユーザーをアクティブとして扱うかどうかを指定します。 アカウントを削除する代わりに、これを選択解除します。', verbose_name='アクティブ判定')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', accounts.models.UserManager()),
            ],
        ),
    ]
